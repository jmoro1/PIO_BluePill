/*
#ifndef DHT22_H
#define DHT22_H

#include "stm32f1xx_hal.h"
#define false 0
#define true 1


typedef struct {
    uint8_t data[5];
    GPIO_TypeDef pin;
    GPIO_InitTypeDef GPIO_Init;
    uint8_t count;
    uint32_t lastReadTime;
    uint32_t maxCycles;
    uint8_t lastResult;
    uint8_t pullTime; // Tiempo (en usec) para tirar de la l√≠nea de datos antes de leer

} DHT;

/*
HAL_StatusTypeDef DHT22_Init(void);
HAL_StatusTypeDef DHT22_ReadData();
*/

/*
void DHT_Init(DHT *dht, uint8_t count, GPIO_TypeDef *GPIOx, GPIO_InitTypeDef *GPIO_Init);
float DHT_ReadTemperature(DHT *dht, uint8_t S, uint8_t force);
float DHT_ReadHumidity(DHT *dht, uint8_t force);
uint8_t DHT_Read(DHT *dht, uint8_t force);
uint32_t expectPulse(uint8_t level);


#ifndef microsecondsToClockCycles
#define microsecondsToClockCycles(a) ((a) * (SystemCoreClock / 1000000L))
#endif


#endif /* DHT22_H */
*/
